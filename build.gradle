buildscript {
	repositories { jcenter() }

	dependencies {
		classpath 'org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:0.7.2'
		classpath 'org.scoverage:gradle-scoverage:1.0.9'
	}
}

plugins { id 'com.github.maiflai.scalatest' version '0.7' }

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'eclipse'
apply plugin: 'scalaStyle'
apply plugin: 'maven-publish'
apply plugin: 'scoverage'

version = '0.1'

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'http://repo.typesafe.com/typesafe/releases' }
}

ext {
	scala_major_version = '2.11'
	scala_minor_version = '7'
	scala_version = scala_major_version + '.' + scala_minor_version
	scala_suffix = '_' + scala_major_version

	scoverage_version = '1.1.0'
}

dependencies {
	//Scala
	compile group: 'org.scala-lang', name: 'scala-compiler', version: scala_version
	compile group: 'org.scala-lang', name: 'scala-library', version: scala_version
	compile group: 'org.scala-lang', name: 'scala-reflect', version: scala_version

	//Persistence
	compile group: 'org.squeryl', name: 'squeryl' + scala_suffix, version: '0.9.5-7'

	//Time
	compile group: 'joda-time', name: 'joda-time', version: '2.5'
	compile group: 'org.joda', name: 'joda-convert', version: '1.7'
	
	//Test utils
	compile group: 'com.h2database', name: 'h2', version: '1.4.182'
	compile group: 'org.scalatest', name: 'scalatest' + scala_suffix, version: '2.2.5'
	scoverage group: 'org.scoverage', name: 'scalac-scoverage-plugin' + scala_suffix, version: scoverage_version
	scoverage group: 'org.scoverage', name: 'scalac-scoverage-runtime' + scala_suffix, version: scoverage_version

	//Testing
	testRuntime group: 'org.pegdown', name: 'pegdown', version:'1.5.0'
	testCompile group: 'org.mockito', name: 'mockito-all', version: '1.+'
}

tasks.withType(ScalaCompile) {
	scalaCompileOptions.useAnt = false
	scalaCompileOptions.useCompileDaemon = true
	scalaCompileOptions.additionalParameters = [
		"-feature",
		"-deprecation",
		"-target:jvm-1.8"
	]
}

test { maxParallelForks = 1 }
testScoverage { maxParallelForks = 1 }

checkScoverage { minimumRate = 0.62 }

scalaStyle {
	configLocation = "/src/test/resources/scalastyle-config.xml"
	includeTestSourceDirectory = true
	source = "src/main/scala"
	testSource = "src/test/scala"
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	from sourceSets.main.allScala
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId 'org.chipmunk'
			artifactId 'chipmunk'

			from components.java

			artifact sourceJar { classifier "sources" }
		}
	}
}